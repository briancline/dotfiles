servers = (
  {
    address = "2610:150:2c68::d0:dab:1de5";
    chatnet = "freenode";
    port = "6667";
    autoconnect = "yes";
  },
  {
    address = "2001:19f0:feee::dead:beef:cafe";
    chatnet = "freenode";
    port = "6667";
  },
  {
    address = "2001:1418:13:1::25";
    chatnet = "freenode";
    port = "6667";
  }
);

chatnets = { freenode = { type = "IRC"; nick = "briancline"; }; };

channels = ( );

aliases = {
  A = "away"
  J = "join";
  LEAVE = "part";
  Q = "QUERY";
  M = "msg";
  T = "topic";
  C = "clear";
  UMODE = "mode $N";

  WC = "window close";
  WN = "window new hide";
  WJ = "join -window";
  WQ = "query -window";

  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";

  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";

  SBAR = "STATUSBAR";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";

  UNSET = "set -clear";
  RESET = "set -default";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}   ";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " irssi";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  default = {
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "Brian Cline";
    user_name = "bc";
    nick = "briancline";
    log_timestamp = "%H:%M:%S ";
    timestamp_format = "%m%d %H%M";
    resolve_prefer_ipv6 = "yes";
    hostname = "taco.sh";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    autolog = "yes";
    autolog_path = "~/irclogs/$tag/$0.%Y%m%d.log";
    theme = "madcow";
    timestamps = "yes";
  };
  "perl/core/scripts" = {
    nicklist_automode = "fifo";
    nicklist_width = "20";
    nicklist_height = "83";
  };
  "irc/core" = { alternate_nick = "briancline_"; skip_motd = "yes"; };
};
logs = { };
windows = {
  1 = {
    immortal = "yes";
    name = "(status)";
    level = "ALL";
    sticky = "yes";
  };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#dallasphp";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-swift";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#softlayer";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  6 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#riemann";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  7 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#coreos";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  8 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-dev";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  9 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-nova";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  10 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-neutron";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  11 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-cinder";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  12 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-glance";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  13 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-horizon";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  14 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-dns";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  15 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-marconi";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  16 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-chef";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  17 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-meniscus";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  18 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-metering";
        tag = "freenode";
      }
    );
    sticky = "yes";
  };
  19 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-101";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  20 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-doc";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  21 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-meeting";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  22 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-meeting-alt";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "1";
  };
  23 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-infra";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
  24 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openstack-state-management";
        tag = "freenode";
      }
    );
    sticky = "yes";
    parent = "18";
  };
};
mainwindows = {
  1 = { first_line = "1"; lines = "30"; };
  18 = { first_line = "31"; lines = "44"; };
};
